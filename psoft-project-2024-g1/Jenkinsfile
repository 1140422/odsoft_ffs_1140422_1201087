pipeline {
	agent any

	tools {
		maven 'Maven3'
		jdk 'Java17'
	}

	stages {
		stage('Checkout') {
			steps {
				checkout scm
			}
		}

		stage('Build') {
			steps {
				dir('psoft-project-2024-g1') {
					bat 'mvn clean compile -DskipTests'
				}
			}
		}

		stage('Static Code Analysis') {
            steps {
                dir('psoft-project-2024-g1') {
                    bat 'mvn checkstyle:check spotbugs:spotbugs -DskipTests'
                }
            }
            post {
                always {
                    recordIssues tools: [
                        checkStyle(pattern: 'psoft-project-2024-g1/target/checkstyle-result.xml'),
                        spotBugs(pattern: 'psoft-project-2024-g1/target/spotbugsXml.xml')
                    ]
                }
            }
        }

		stage('Unit Tests') {
			steps {
				dir('psoft-project-2024-g1') {
					bat 'mvn test'
				}
			}
			post {
				always {
					junit 'psoft-project-2024-g1/target/surefire-reports/*.xml'
					recordCoverage(tools: [[parser: 'JACOCO']],
                            id: 'jacoco', name: 'JaCoCo Coverage',
                            sourceCodeRetention: 'EVERY_BUILD',
                            qualityGates: [
                                    [threshold: 10.0, metric: 'LINE', baseline: 'PROJECT', unstable: true],
                                    [threshold: 10.0, metric: 'BRANCH', baseline: 'PROJECT', unstable: true]])
				}
			}
		}

		stage('Mutation Tests') {
            steps {
                dir('psoft-project-2024-g1') {
                    bat 'mvn pitest:mutationCoverage'
                }
            }
            post {
                always {
                    publishHTML(target: [
                        allowMissing: true,
                        keepAll: true,
                        reportDir: 'target/pit-reports',
                        reportFiles: 'index.html',
                        reportName: 'Mutation Testing Report'
                    ])
                }
            }
        }

		stage('Integration Tests') {
            steps {
                dir('psoft-project-2024-g1') {
                    bat 'mvn verify'
                }
            }
            post {
                always {
                    junit 'psoft-project-2024-g1/target/failsafe-reports/*.xml'
                }
            }
        }
	}

	post {
		success {
			echo 'Pipeline completed successfully!'
		}
		failure {
			echo 'Pipeline failed. Please check the logs.'
		}
	}
}
